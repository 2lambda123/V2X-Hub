/**
 * Pedestrian Plugin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessage_value.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessage_value::OAIMessage_value(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessage_value::OAIMessage_value() {
    this->initializeModel();
}

OAIMessage_value::~OAIMessage_value() {}

void OAIMessage_value::initializeModel() {

    m_all_vals_isSet = false;
    m_all_vals_isValid = false;
}

void OAIMessage_value::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessage_value::fromJsonObject(QJsonObject json) {

    m_all_vals_isValid = ::OpenAPI::fromJsonValue(all_vals, json[QString("all_vals")]);
    m_all_vals_isSet = !json[QString("all_vals")].isNull() && m_all_vals_isValid;
}

QString OAIMessage_value::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessage_value::asJsonObject() const {
    QJsonObject obj;
    if (all_vals.isSet()) {
        obj.insert(QString("all_vals"), ::OpenAPI::toJsonValue(all_vals));
    }
    return obj;
}

OAIAll_vals OAIMessage_value::getAllVals() const {
    return all_vals;
}
void OAIMessage_value::setAllVals(const OAIAll_vals &all_vals) {
    this->all_vals = all_vals;
    this->m_all_vals_isSet = true;
}

bool OAIMessage_value::is_all_vals_Set() const{
    return m_all_vals_isSet;
}

bool OAIMessage_value::is_all_vals_Valid() const{
    return m_all_vals_isValid;
}

bool OAIMessage_value::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (all_vals.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessage_value::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_all_vals_isValid && true;
}

} // namespace OpenAPI
