/**
 * Pedestrian Plugin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessage_frame.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessage_frame::OAIMessage_frame(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessage_frame::OAIMessage_frame() {
    this->initializeModel();
}

OAIMessage_frame::~OAIMessage_frame() {}

void OAIMessage_frame::initializeModel() {

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_message_value_isSet = false;
    m_message_value_isValid = false;
}

void OAIMessage_frame::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessage_frame::fromJsonObject(QJsonObject json) {

    m_message_id_isValid = ::OpenAPI::fromJsonValue(message_id, json[QString("messageId")]);
    m_message_id_isSet = !json[QString("messageId")].isNull() && m_message_id_isValid;

    m_message_value_isValid = ::OpenAPI::fromJsonValue(message_value, json[QString("messageValue")]);
    m_message_value_isSet = !json[QString("messageValue")].isNull() && m_message_value_isValid;
}

QString OAIMessage_frame::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessage_frame::asJsonObject() const {
    QJsonObject obj;
    if (m_message_id_isSet) {
        obj.insert(QString("messageId"), ::OpenAPI::toJsonValue(message_id));
    }
    if (message_value.isSet()) {
        obj.insert(QString("messageValue"), ::OpenAPI::toJsonValue(message_value));
    }
    return obj;
}

double OAIMessage_frame::getMessageId() const {
    return message_id;
}
void OAIMessage_frame::setMessageId(const double &message_id) {
    this->message_id = message_id;
    this->m_message_id_isSet = true;
}

bool OAIMessage_frame::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAIMessage_frame::is_message_id_Valid() const{
    return m_message_id_isValid;
}

OAIMessage_value OAIMessage_frame::getMessageValue() const {
    return message_value;
}
void OAIMessage_frame::setMessageValue(const OAIMessage_value &message_value) {
    this->message_value = message_value;
    this->m_message_value_isSet = true;
}

bool OAIMessage_frame::is_message_value_Set() const{
    return m_message_value_isSet;
}

bool OAIMessage_frame::is_message_value_Valid() const{
    return m_message_value_isValid;
}

bool OAIMessage_frame::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (message_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessage_frame::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_message_id_isValid && m_message_value_isValid && true;
}

} // namespace OpenAPI
